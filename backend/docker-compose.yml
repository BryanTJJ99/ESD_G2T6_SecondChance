## Useful commands
# docker-compose up -d
# docker-compose down

## To stop single containers from compose
# docker-compose rm -sv <service name>
# docker rmi -f <image_id> # to remove image
# docker-compose up -d  # to rebuild only that image you removed (built images wont be rebuilt)

## To remove images
# docker images -q
# copy and paste ids and use docker rmi


version: "3.8"

volumes:
  rabbitmq_data:

# networks:
#   default:
#     name: kong_kong-next

services:
  #######################################################################
  # Simple microservices
  #######################################################################


  ####################################
  # Item microservice
  ####################################
  item:
    build:
      context: ./item
      dockerfile: item.Dockerfile
    image: vickyyqu/item:esd
    restart: always
    environment:
      PYTHONUNBUFFERED: 1
    ports:
      - "5000:5000"



  ####################################
  # Company microservice
  ####################################
  company:
    build:
      context: ./company
      dockerfile: company.Dockerfile
    image: vickyyqu/company:esd
    restart: always
    environment:
      PYTHONUNBUFFERED: 1
    ports:
      - "5001:5001"


  ####################################
  # Department microservice
  ####################################
  department:
    build:
      context: ./department
      dockerfile: Dockerfile
    image: vickyyqu/department:esd
    restart: always
    ports:
      - "5005:5005"

  ####################################
  # Carbon Calculator microservice
  ####################################
  carbon_calculator:
    build:
      context: ./carbon_calculator
      dockerfile: carbon_calculator.Dockerfile
    image: vickyyqu/carbon_calculator:esd
    restart: always
    environment:
      PYTHONUNBUFFERED: 1
    ports:
      - "5002:5002"

  ####################################
  # Slack microservice
  ####################################  




  ####################################
  # Error microservice
  ####################################  
  error:
    build:
      context: ./error
      dockerfile: error.Dockerfile
    image: vickyyqu/error:esd
    restart: always
    depends_on:
      - rabbitmq
    environment:
      rabbit_host: rabbitmq
      rabbit_port: 5672
      PYTHONUNBUFFERED: 1

  ####################################
  # Activity Log microservice
  ####################################  
  activity_log:
    build:
      context: ./activity_log
      dockerfile: activity_log.Dockerfile
    image: vickyyqu/activity_log:esd
    restart: always
    depends_on:
      - rabbitmq
    environment:
      rabbit_host: rabbitmq
      rabbit_port: 5672
      PYTHONUNBUFFERED: 1

  #######################################################################
  # Message broker microservices
  #######################################################################

  ####################################
  # RabbitMQ: The messaging broker   
  ####################################
  rabbitmq:
    image: rabbitmq:3-management
    hostname: esd-rabbit
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes: 
      - rabbitmq_data:/var/lib/rabbitmq


  ####################################
  # Kafka
  ####################################








  #######################################################################
  # Complex microservices
  ####################################################################### 



  ###############################################
  # Place Item
  ###############################################






  ###############################################
  # Accept Item
  ###############################################







  ###############################################
  # Reject Item
  ###############################################






